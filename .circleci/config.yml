version: 2.1
orbs:
  docker: circleci/docker@2.4.0
  # snyk: snyk/snyk@2.0.1
  # heroku: circleci/heroku@2.0.0
jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            echo "Running test"
            mvn -B -DskipTests clean package
  test:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: |
            echo "Running test"
            mvn -B -DskipTests clean package
  # scan:
  #   docker:
  #     - image: cimg/openjdk:17.0
  #   environment:
  #     IMAGE_NAME: justenmx/springmart-backend:latest
  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - docker/check
  #     - run: docker build -t $IMAGE_NAME .
  #     - snyk/scan:
  #         docker-image-name: $IMAGE_NAME
  #         fail-on-issues: false
  #         monitor-on-build: true
  #         project: ${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}-app
  #         severity-threshold: low
  #         token-variable: SNYK_TOKEN

  build-and-push:
    executor: docker/docker
    environment:
      IMAGE_NAME: justenmx/springmart-backend
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: justenmx/springmart-backend
          tag: <<pipeline.git.tag>>
      - docker/push:
          image: justenmx/springmart-backend
          tag: <<pipeline.git.tag>>

  # deploy:
  #   docker:
  #     - image: cimg/openjdk:17.0
  #   steps:
  #     - setup_remote_docker
  #     - heroku/install
  #     - checkout
  #     - run:
  #         name: Heroku Container Push
  #         command: |
  #           heroku container:login
  #           heroku container:push web -a nutrimateapp
  #           heroku container:release web -a nutrimateapp

workflows:
  # ci_flow:
  #   jobs:
  #     - build
  #     - test:
  #         requires:
  #           - build

  cicd_flow:
    jobs:
      - build
      - test:
          requires:
            - build
      # - scan:
      #     requires:
      #       - test
      - build-and-push:
          requires:
            - test
      # - deploy:
      #     requires:
      #       - build-and-push
