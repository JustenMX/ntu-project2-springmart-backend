version: 2.1

orbs:
  docker: circleci/docker@2.4.0
  snyk: snyk/snyk@2.0.1
  # heroku: circleci/heroku@2.0.0

jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0.8
      - image: cimg/postgres:16.0
        environment:
          POSTGRES_USER: justen
          POSTGRES_DB: springmart
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            echo "Installing dependencies"
            mvn -B -DskipTests clean package
      - run:
          name: Wait for Postgres to start
          command: |
            echo "Wait for Postgres to start"
            dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Build PostgreSQL Docker Image
          command: docker build -t springmart_postgres .

  test:
    docker:
      - image: cimg/openjdk:17.0.8
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: |
            echo "Running tests"
            mvn -B test
      - store_test_results:
          path: target/surefire-reports

  scan:
    docker:
      - image: cimg/openjdk:17.0.8
    environment:
      IMAGE_NAME: justenmx/springmart-backend:latest
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run:
          name: Build Docker Image
          command: docker build -t $IMAGE_NAME .
      - snyk/scan:
          docker-image-name: $IMAGE_NAME
          fail-on-issues: true
          monitor-on-build: true
          project: ${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}-app
          severity-threshold: low
          token-variable: SNYK_TOKEN

  build-and-push:
    executor: docker/docker
    environment:
      IMAGE_NAME: justenmx/springmart-backend
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: justenmx/springmart-backend
          tag: <<pipeline.git.tag>>
      - docker/push:
          image: justenmx/springmart-backend
          tag: <<pipeline.git.tag>>

  # deploy:
  #   docker:
  #     - image: cimg/openjdk:17.0.8
  #   steps:
  #     - setup_remote_docker
  #     - heroku/install
  #     - checkout
  #     - run:
  #         name: Heroku Container Push
  #         command: |
  #           heroku container:login
  #           heroku container:push web -a springmart-backend
  #           heroku container:release web -a springmart-backend

workflows:
  ci_flow:
    jobs:
      - build
      - test:
          requires:
            - build
      - scan:
          requires:
            - test
      - build-and-push:
          requires:
            - scan
      # - deploy:
      #     requires:
      #       - build-and-push
